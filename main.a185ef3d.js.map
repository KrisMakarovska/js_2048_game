{"version":3,"sources":["scripts/main.js"],"names":["cells","document","querySelectorAll","startButton","querySelector","gameScore","message","gameField","randomNumbers","doublingNumbers","startOrRestart","sum","winGame","cell","i","push","children","cleanField","startGame","textContent","classList","map","a","addRandomNumber","finishGame","sideСells","includes","length","indexValue","Math","floor","random","randomStartValue","randomKlitunka","filter","doublingCell","index","step","movingCell","stepDown","stepUp","stepLeft","leftsideСells","stepRight","rightsideСells","addEventListener","e","key","prevGameField","toString"],"mappings":"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","file":"main.a185ef3d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst cells = document.querySelectorAll('.field-row');\nconst startButton = document.querySelector('button');\nconst gameScore = document.querySelector('.game-score');\nconst message = document.querySelector('.message-container');\n\nconst gameField = [];\nconst randomNumbers = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\nconst doublingNumbers = [];\n\nlet startOrRestart = 'start';\nlet sum = 0;\nlet winGame = false;\n\nfor (const cell of cells) {\n  for (let i = 0; i < 4; i++) {\n    gameField.push(cell.children[i]);\n  }\n}\n\nlet cleanField = [...gameField];\n\nconst startGame = () => {\n  if (startOrRestart === 'start') {\n    startButton.textContent = 'Restart';\n    startButton.classList = 'button restart';\n    startOrRestart = 'restart';\n    message.children[2].classList = 'message message-start hidden';\n  }\n\n  if (startOrRestart === 'restart') {\n    cleanField = [...gameField];\n\n    gameField.map(a => {\n      a.textContent = '';\n      a.classList = 'field-cell';\n    });\n    sum = 0;\n    gameScore.textContent = '0';\n    message.children[1].classList = 'message message-win hidden';\n    message.children[0].classList = 'message message-lose hidden';\n    winGame = false;\n  }\n  addRandomNumber();\n  addRandomNumber();\n};\n\nconst finishGame = () => {\n  const sideСells = [3, 4, 7, 8, 11, 12];\n\n  for (let i = 0; i <= 15; i++) {\n    if (gameField[i - 4]) {\n      if (gameField[i].textContent === gameField[i - 4].textContent) {\n        return;\n      }\n    }\n\n    if (gameField[i - 1]) {\n      if (\n        gameField[i].textContent === gameField[i - 1].textContent\n          && !sideСells.includes(i)) {\n        return;\n      }\n    }\n\n    if (gameField[i + 1]) {\n      if (\n        gameField[i].textContent === gameField[i + 1].textContent\n          && !sideСells.includes(i)) {\n        return;\n      }\n    }\n\n    if (gameField[i + 4]) {\n      if (gameField[i].textContent === gameField[i + 4].textContent) {\n        return;\n      }\n    }\n  }\n  message.children[0].classList = 'message message-lose';\n};\n\nconst addRandomNumber = () => {\n  if (cleanField.length === 0) {\n    return;\n  }\n\n  const indexValue = Math.floor(Math.random() * randomNumbers.length);\n  const randomStartValue = randomNumbers[indexValue];\n  const randomKlitunka = Math.floor(Math.random() * cleanField.length);\n\n  cleanField[randomKlitunka].textContent = `${randomStartValue}`;\n\n  cleanField[randomKlitunka].classList = (\n    `field-cell field-cell--${randomStartValue}`);\n  cleanField = gameField.filter(a => a.textContent === '');\n};\n\nconst doublingCell = (index, step) => {\n  gameField[index + step].textContent = `${gameField[index].textContent * 2}`;\n\n  gameField[index + step].classList = `field-cell\n    field-cell--${gameField[index].textContent * 2}`;\n  gameField[index].textContent = '';\n  gameField[index].classList = 'field-cell';\n  doublingNumbers.push(index, index + step);\n  sum += +gameField[index + step].textContent;\n\n  if (+gameField[index + step].textContent === 2048) {\n    message.children[1].classList = 'message message-win';\n    winGame = true;\n  }\n};\n\nconst movingCell = (index, step) => {\n  gameField[index + step].textContent = gameField[index].textContent;\n  gameField[index + step].classList = gameField[index].classList;\n  gameField[index].textContent = '';\n  gameField[index].classList = 'field-cell';\n};\n\nconst stepDown = () => {\n  for (let i = 11; i >= 0; i--) {\n    if (gameField[i].textContent !== '') {\n      if (gameField[i].textContent === gameField[i + 4].textContent\n        && !doublingNumbers.includes(i)) {\n        doublingCell(i, 4);\n      }\n\n      if (gameField[i + 4].textContent === '') {\n        movingCell(i, 4);\n      }\n    }\n  }\n};\n\nconst stepUp = () => {\n  for (let i = 4; i <= 15; i++) {\n    if (gameField[i].textContent !== '') {\n      if (gameField[i].textContent === gameField[i - 4].textContent\n        && !doublingNumbers.includes(i)) {\n        doublingCell(i, -4);\n      }\n\n      if (gameField[i - 4].textContent === '') {\n        movingCell(i, -4);\n      }\n    }\n  }\n};\n\nconst stepLeft = () => {\n  const leftsideСells = [0, 4, 8, 12];\n\n  for (let i = 0; i <= 15; i++) {\n    if (gameField[i].textContent !== ''\n      && !leftsideСells.includes(i)) {\n      if (gameField[i].textContent === gameField[i - 1].textContent\n        && !doublingNumbers.includes(i)) {\n        doublingCell(i, -1);\n      }\n\n      if (gameField[i - 1].textContent === '') {\n        movingCell(i, -1);\n      }\n    }\n  }\n};\n\nconst stepRight = () => {\n  const rightsideСells = [3, 7, 11, 15];\n\n  for (let i = 15; i >= 0; i--) {\n    if (gameField[i].textContent !== '' && !rightsideСells.includes(i)) {\n      if (gameField[i].textContent === gameField[i + 1].textContent\n        && !doublingNumbers.includes(i)) {\n        doublingCell(i, 1);\n      }\n\n      if (gameField[i + 1].textContent === '') {\n        movingCell(i, 1);\n      }\n    }\n  }\n};\n\nstartButton.addEventListener('click', () => {\n  startGame();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (e.key === 'ArrowDown'\n    || e.key === 'ArrowUp'\n    || e.key === 'ArrowLeft'\n    || e.key === 'ArrowRight'\n  ) {\n    if (winGame) {\n      return;\n    }\n\n    if (cleanField.length === 0) {\n      finishGame();\n    }\n\n    const prevGameField = gameField.map(a => a.textContent);\n\n    switch (e.key) {\n      case 'ArrowDown':\n        stepDown();\n        stepDown();\n        stepDown();\n        break;\n\n      case 'ArrowUp':\n        stepUp();\n        stepUp();\n        stepUp();\n        break;\n\n      case 'ArrowLeft':\n        stepLeft();\n        stepLeft();\n        stepLeft();\n        break;\n\n      case 'ArrowRight':\n        stepRight();\n        stepRight();\n        stepRight();\n        break;\n\n      default:\n        break;\n    }\n\n    cleanField = gameField.filter(cell => cell.textContent === '');\n\n    if (prevGameField.toString()\n      !== gameField.map(cell => cell.textContent).toString()) {\n      addRandomNumber();\n    }\n\n    doublingNumbers.length = 0;\n    gameScore.textContent = `${sum}`;\n  }\n});\n"]}